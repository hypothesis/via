# Follow chains of multiple redirects (when the requested URL redirects to
# another URL which in turn redirects to another).
#
# This is limited to following up to 10 redirects.
#
# recursive_error_pages is also needed to enable our 4xx and 5xx error handling
# to kick in when the requested URL redirects to a URL that 4xx's or 5xx's.
#
# http://nginx.org/en/docs/http/ngx_http_core_module.html#recursive_error_pages
recursive_error_pages on;

# Intercept 3xx, 4xx and 5xx responses from the servers we're
# proxying and process them through the error_page directives
# below: http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_intercept_errors
proxy_intercept_errors on;

# Don't pass 3xx responses from the servers we're proxying back to
# the browser. Instead process them through the @handle_redirect
# location (which is defined in nginx.conf).
# http://nginx.org/en/docs/http/ngx_http_core_module.html#error_page
error_page 301 302 307 = @handle_redirect;

# Don't pass 4xx or 5xx responses from the servers we're proxying
# back to the browser. Instead process them through the @proxy_*
# locations defined below.
#
# If users are proxying a third-party server that is returning
# error responses we don't want Via to return those same 4xx or
# 5xx status codes to the browser because this would mess up our
# monitoring and alerting. For example it might trigger an alarm
# that Via is unhealthy because it's sending too many error
# responses.
#
# So pass third-party error responses through our various @proxy_* locations
# (which are defined in nginx.conf) to modify them.
#
# http://nginx.org/en/docs/http/ngx_http_core_module.html#error_page

# 2021-08-23: Replacement of error responses from the upstream server has been disabled
#             to enable debugging of a production issue.
#
# error_page 404 410 = @proxy_not_found;
# error_page 420 429 = @proxy_too_many_requests;
# error_page 400 401 402 403 405 406 407 408 409 411 412 413 414 415 416 417 418 422 423 424 425 426 428 431 444 449 450 451 = @proxy_client_error;
# error_page 500 501 502 503 504 505 506 507 508 509 510 511 598 599 = @proxy_upstream_error;
