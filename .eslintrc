{
  "extends": [
    "hypothesis",
    "plugin:jsx-a11y/recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint"],
  "rules": {
    "prefer-arrow-callback": "error",
    "prefer-const": ["error", { "destructuring": "all" }],

    // Props are checked by TS.
    "react/prop-types": "off",

    // Upgrade TS rules from warning to error.
    "@typescript-eslint/no-unused-vars": "error",

    // Disable TS rules that we dislike.
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-this-alias": "off",

    // Enforce consistency in cases where TypeScript supports old and new
    // syntaxes for the same thing.
    //
    // - Require `<var> as <type>` for casts
    // - Require `import type` for type imports. The corresponding rule for
    //   exports is not enabled yet because that requires setting up type-aware
    //   linting.
    "@typescript-eslint/consistent-type-assertions": "error",
    "@typescript-eslint/consistent-type-imports": "error",
  },
  "overrides": [
    // Additional rules that require type information. These can only be run
    // on files included in the TS project by tsconfig.json.
    {
      "files": "via/static/scripts/*.{js,ts,tsx}",
      "excludedFiles": ["karma.config.js", "setup-tests.js", "**/test/*.js"],
      "rules": {
        "@typescript-eslint/no-unnecessary-condition": "error"
      },
      "parserOptions": {
        "project": "via/static/scripts/tsconfig.json"
      }
    },

    // Code that runs in Node
    {
      "files": "*.js",
      "excludedFiles": ["via/**"],
      "env": { "node": true },
    }
  ]
}
